# This is a basic workflow to help you get started with Actions
name: STAGING ETL

# Controls when the workflow will run
on:
  # Triggers the workflow on push request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
      
      - name: Install OpenVPN
        run: |
          sudo apt update
          sudo apt install -y openvpn openvpn-systemd-resolved

      - name: Connect to VPN
        uses: "kota65535/github-openvpn-connect-action@v2"
        with:
          config_file: .github/workflows/vpn/otsietladm__ssl_vpn_config.ovpn
          username: ${{ secrets.OVPN_USERNAME }}
          password: ${{ secrets.OVPN_PASSWORD }}
          client_key: ${{ secrets.OVPN_CLIENTKEY }}
          
      - name: Assigning Permissions
        run: |
          chmod 777 up.txt
          chmod 777 client.key
          
      - name: Copy files via SSH key
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.STAGING_ETL_HOST }}
          port: ${{ secrets.STAGING_ETL_PORT }}
          username: ${{ secrets.STAGING_ETL_USERNAME }}
          key: ${{ secrets.STAGING_ETL_KEY }}
          source: "./"
          target: "/home/otsietladm/"

      - name: Execute install.sh via SSH key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGING_ETL_HOST }}
          port: ${{ secrets.STAGING_ETL_PORT }}
          username: ${{ secrets.STAGING_ETL_USERNAME }}
          key: ${{ secrets.STAGING_ETL_KEY }}
          script: |
            cd /home/otsietladm/
            # git clean -fd
            sh install.sh

      - name: Create ENV files via SSH key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGING_ETL_HOST }}
          port: ${{ secrets.STAGING_ETL_PORT }}
          username: ${{ secrets.STAGING_ETL_USERNAME }}
          key: ${{ secrets.STAGING_ETL_KEY }}
          script: |
              echo "${{ secrets.UTILS_ENV }}" > "/home/otsietladm/etl_utils/.env"
              echo "${{ secrets.EMAIL_CONFIG }}" >> "/home/otsietladm/etl_utils/.env"
              echo "${{ secrets.FILE_UPLOAD_TRIGGER_SERVICE }}" | sudo tee "/etc/systemd/system/fileuploadstrigger.service"

      - name: Execute deploy.sh via SSH key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGING_ETL_HOST }}
          port: ${{ secrets.STAGING_ETL_PORT }}
          username: ${{ secrets.STAGING_ETL_USERNAME }}
          key: ${{ secrets.STAGING_ETL_KEY }}
          script: sh /home/otsietladm/deploy.sh
